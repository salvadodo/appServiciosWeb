//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace consumirWebService.servicioCasasWcf {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="servicioCasasWcf.IservicioWcfCasas")]
    public interface IservicioWcfCasas {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/registrosCasas", ReplyAction="http://tempuri.org/IservicioWcfCasas/registrosCasasResponse")]
        serviciosWebDatos.Models.Casas[] registrosCasas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/registrosCasas", ReplyAction="http://tempuri.org/IservicioWcfCasas/registrosCasasResponse")]
        System.Threading.Tasks.Task<serviciosWebDatos.Models.Casas[]> registrosCasasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/seleccionarCasa", ReplyAction="http://tempuri.org/IservicioWcfCasas/seleccionarCasaResponse")]
        serviciosWebDatos.Models.Casas seleccionarCasa(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/seleccionarCasa", ReplyAction="http://tempuri.org/IservicioWcfCasas/seleccionarCasaResponse")]
        System.Threading.Tasks.Task<serviciosWebDatos.Models.Casas> seleccionarCasaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/insertarCasa", ReplyAction="http://tempuri.org/IservicioWcfCasas/insertarCasaResponse")]
        bool insertarCasa(serviciosWebDatos.Models.Casas insCasa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/insertarCasa", ReplyAction="http://tempuri.org/IservicioWcfCasas/insertarCasaResponse")]
        System.Threading.Tasks.Task<bool> insertarCasaAsync(serviciosWebDatos.Models.Casas insCasa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/modificarCasa", ReplyAction="http://tempuri.org/IservicioWcfCasas/modificarCasaResponse")]
        bool modificarCasa(serviciosWebDatos.Models.Casas modCasas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/modificarCasa", ReplyAction="http://tempuri.org/IservicioWcfCasas/modificarCasaResponse")]
        System.Threading.Tasks.Task<bool> modificarCasaAsync(serviciosWebDatos.Models.Casas modCasas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/eliminarCasa", ReplyAction="http://tempuri.org/IservicioWcfCasas/eliminarCasaResponse")]
        bool eliminarCasa(int eliCasa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IservicioWcfCasas/eliminarCasa", ReplyAction="http://tempuri.org/IservicioWcfCasas/eliminarCasaResponse")]
        System.Threading.Tasks.Task<bool> eliminarCasaAsync(int eliCasa);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IservicioWcfCasasChannel : consumirWebService.servicioCasasWcf.IservicioWcfCasas, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IservicioWcfCasasClient : System.ServiceModel.ClientBase<consumirWebService.servicioCasasWcf.IservicioWcfCasas>, consumirWebService.servicioCasasWcf.IservicioWcfCasas {
        
        public IservicioWcfCasasClient() {
        }
        
        public IservicioWcfCasasClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public IservicioWcfCasasClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IservicioWcfCasasClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public IservicioWcfCasasClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public serviciosWebDatos.Models.Casas[] registrosCasas() {
            return base.Channel.registrosCasas();
        }
        
        public System.Threading.Tasks.Task<serviciosWebDatos.Models.Casas[]> registrosCasasAsync() {
            return base.Channel.registrosCasasAsync();
        }
        
        public serviciosWebDatos.Models.Casas seleccionarCasa(int id) {
            return base.Channel.seleccionarCasa(id);
        }
        
        public System.Threading.Tasks.Task<serviciosWebDatos.Models.Casas> seleccionarCasaAsync(int id) {
            return base.Channel.seleccionarCasaAsync(id);
        }
        
        public bool insertarCasa(serviciosWebDatos.Models.Casas insCasa) {
            return base.Channel.insertarCasa(insCasa);
        }
        
        public System.Threading.Tasks.Task<bool> insertarCasaAsync(serviciosWebDatos.Models.Casas insCasa) {
            return base.Channel.insertarCasaAsync(insCasa);
        }
        
        public bool modificarCasa(serviciosWebDatos.Models.Casas modCasas) {
            return base.Channel.modificarCasa(modCasas);
        }
        
        public System.Threading.Tasks.Task<bool> modificarCasaAsync(serviciosWebDatos.Models.Casas modCasas) {
            return base.Channel.modificarCasaAsync(modCasas);
        }
        
        public bool eliminarCasa(int eliCasa) {
            return base.Channel.eliminarCasa(eliCasa);
        }
        
        public System.Threading.Tasks.Task<bool> eliminarCasaAsync(int eliCasa) {
            return base.Channel.eliminarCasaAsync(eliCasa);
        }
    }
}
